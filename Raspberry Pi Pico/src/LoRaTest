import utime
import _thread
from lora_e32_operation_constant import *
from machine import UART, Pin
from lora_e32 import LoRaE32

loRaSerialBus: UART = UART(0, 9600, tx=Pin(16), rx=Pin(17))
loRa: LoRaE32 = LoRaE32("433T30D", loRaSerialBus)
loRaAux: Pin = Pin(18, Pin.IN)
builtInLed = Pin(25, Pin.OUT)

for x in range(10):
    builtInLed.value(1)
    utime.sleep_ms(50)
    builtInLed.value(0)
    utime.sleep_ms(50)


def AuxPinTest():
    global builtInLed

    while True:
        if loRaAux.value() == 0:
            builtInLed.value(1)


_thread.start_new_thread(AuxPinTest, ())


while True:
    print(ResponseStatusCode.get_description(loRa.send_fixed_dict(0, 5, 23, {'temp': 20, 'lufttrykk': 1000})))

    builtInLed.value(0)

    utime.sleep(1)


# ---------- Receiever ---------- #


import utime
from lora_e32_operation_constant import *
from machine import UART, Pin
from lora_e32 import LoRaE32

loRaSerialBus: UART = UART(0, 9600, tx=Pin(16), rx=Pin(17))
loRa: LoRaE32 = LoRaE32("433T30D", loRaSerialBus)
builtInLed = Pin(25, Pin.OUT)


while True:
    if loRa.available() > 0:
        code, value = loRa.receive_dict()

        print(value)

        utime.sleep_ms(1000)



